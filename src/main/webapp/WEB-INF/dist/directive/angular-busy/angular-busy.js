angular.module("cgBusy",[]),angular.module("cgBusy").factory("_cgBusyTrackerFactory",["$timeout","$q",function(e,r){return function(){var s={};s.promises=[],s.delayPromise=null,s.durationPromise=null,s.delayJustFinished=!1,s.reset=function(r){s.minDuration=r.minDuration,s.promises=[],angular.forEach(r.promises,function(e){e&&!e.$cgBusyFulfilled&&i(e)}),0!==s.promises.length&&(s.delayJustFinished=!1,r.delay&&(s.delayPromise=e(function(){s.delayPromise=null,s.delayJustFinished=!0},parseInt(r.delay,10))),r.minDuration&&(s.durationPromise=e(function(){s.durationPromise=null},parseInt(r.minDuration,10)+(r.delay?parseInt(r.delay,10):0))))},s.isPromise=function(e){var r=e&&(e.then||e.$then||e.$promise&&e.$promise.then);return"undefined"!=typeof r},s.callThen=function(e,s,i){var n;e.then||e.$then?n=e:e.$promise?n=e.$promise:e.denodeify&&(n=r.when(e));var a=n.then||n.$then;a.call(n,s,i)};var i=function(e){if(!s.isPromise(e))throw new Error("cgBusy expects a promise (or something that has a .promise or .$promise");-1===s.promises.indexOf(e)&&(s.promises.push(e),s.callThen(e,function(){e.$cgBusyFulfilled=!0,-1!==s.promises.indexOf(e)&&s.promises.splice(s.promises.indexOf(e),1)},function(){e.$cgBusyFulfilled=!0,-1!==s.promises.indexOf(e)&&s.promises.splice(s.promises.indexOf(e),1)}))};return s.active=function(){return s.delayPromise?!1:s.delayJustFinished?(s.delayJustFinished=!1,s.promises.length>0):s.durationPromise?!0:s.promises.length>0},s}}]),angular.module("cgBusy").value("cgBusyDefaults",{}),angular.module("cgBusy").directive("cgBusy",["$compile","$templateCache","cgBusyDefaults","$http","_cgBusyTrackerFactory",function(e,r,s,i,n){return{restrict:"A",link:function(a,t,o,u){var l=t.css("position");"static"!==l&&""!==l&&"undefined"!=typeof l||t.css("position","relative");var c,m,d,p,g,y=n(),f={templateUrl:"angular-busy.html",delay:0,minDuration:0,backdrop:!0,message:"Please Wait...",wrapperClass:"cg-busy cg-busy-animation"};angular.extend(f,s),a.$watchCollection(o.cgBusy,function(s){if(s||(s={promise:null}),angular.isString(s))throw new Error("Invalid value for cg-busy. cgBusy no longer accepts string ids to represent promises/trackers.");(angular.isArray(s)||y.isPromise(s))&&(s={promise:s}),s=angular.extend(angular.copy(f),s),s.templateUrl||(s.templateUrl=f.templateUrl),angular.isArray(s.promise)||(s.promise=[s.promise]),p||(p=a.$new()),p.$message=s.message,angular.equals(y.promises,s.promise)||y.reset({promises:s.promise,delay:s.delay,minDuration:s.minDuration}),p.$cgBusyIsActive=function(){return y.active()},c&&d===s.templateUrl&&g===s.backdrop||(c&&c.remove(),m&&m.remove(),d=s.templateUrl,g=s.backdrop,i.get(d,{cache:r}).success(function(r){if(s.backdrop="undefined"==typeof s.backdrop?!0:s.backdrop,s.backdrop){var i='<div class="cg-busy cg-busy-backdrop cg-busy-backdrop-animation ng-hide" ng-show="$cgBusyIsActive()"></div>';m=e(i)(p),t.append(m)}var n='<div class="'+s.wrapperClass+' ng-hide" ng-show="$cgBusyIsActive()">'+r+"</div>";c=e(n)(p),angular.element(c.children()[0]).css("position","absolute").css("top",0).css("left",0).css("right",0).css("bottom",0),t.append(c)}).error(function(e){throw new Error("Template specified for cgBusy ("+s.templateUrl+") could not be loaded. "+e)}))},!0)}}}]),angular.module("cgBusy").run(["$templateCache",function(e){"use strict";e.put("angular-busy.html",'		  <div style="margin-top:50px;">		  	<div layout="column" layout-align="top center">		  		<md-progress-circular md-mode="indeterminate" md-diameter="50"></md-progress-circular>		  		<div>{{$message}}</div>		  	</div>		  </div>	')}]);